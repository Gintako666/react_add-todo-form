{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","renderTodo","className","href","user","TodoList","renderTodos","map","classNames","App","getUserOnId","usersFromServer","find","useState","setTitle","userSelect","setUser","titleError","setTitleError","userSelectError","setUserError","todoAndUser","todosFromServer","todo","setRenderTodos","action","method","placeholder","type","value","onChange","e","target","disabled","onClick","preventDefault","newUser","length","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84edb0d0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { TodoProps } from '../Type/types';\n\ntype Props = {\n  renderTodo: TodoProps\n};\n\nexport const TodoInfo: React.FC<Props> = ({ renderTodo }) => {\n  return (\n    <>\n      <h2 className=\"TodoInfo__title\">\n        {renderTodo.title}\n      </h2>\n\n      <a className=\"UserInfo\" href={`mailto:${renderTodo.user && renderTodo.user.email}`}>\n        {renderTodo.user && renderTodo.user.name}\n      </a>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoProps } from '../Type/types';\n\ntype Props = {\n  renderTodos: TodoProps[]\n};\n\nexport const TodoList: React.FC<Props> = ({ renderTodos }) => {\n  return (\n    <section className=\"TodoList\">\n      {renderTodos.map(renderTodo => (\n        <article\n          data-id={renderTodo.id}\n          className={classNames(\n            'TodoInfo',\n            { 'TodoInfo--completed': renderTodo.completed },\n          )}\n          key={renderTodo.id}\n        >\n          <TodoInfo renderTodo={renderTodo} />\n        </article>\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  function getUserOnId(id: number) {\n    return usersFromServer.find(user => user.id === id);\n  }\n\n  const [title, setTitle] = useState('');\n  const [userSelect, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userSelectError, setUserError] = useState(false);\n\n  const todoAndUser = [...todosFromServer].map(todo => (\n    {\n      ...todo,\n      user: getUserOnId(todo.userId),\n    }\n  ));\n\n  const [renderTodos, setRenderTodos] = useState(todoAndUser);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userSelect}\n              onChange={(e) => {\n                setUser(+e.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {\n            userSelectError\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(e) => {\n            e.preventDefault();\n\n            // eslint-disable-next-line max-len, @typescript-eslint/no-unused-expressions\n            title === '' ? setTitleError(true) : setTitleError(false);\n            // eslint-disable-next-line max-len, @typescript-eslint/no-unused-expressions\n            userSelect === 0 ? setUserError(true) : setUserError(false);\n\n            if (title !== '' && userSelect !== 0) {\n              const newUser = {\n                id: renderTodos.length,\n                title,\n                completed: false,\n                userId: userSelect,\n                user: getUserOnId(userSelect),\n              };\n\n              setRenderTodos(state => [...state, newUser]);\n\n              setTitle('');\n              setUser(0);\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList renderTodos={renderTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}