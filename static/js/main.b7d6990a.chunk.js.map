{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","renderTodo","style","listStyle","className","href","user","TodoList","renderTodos","map","classNames","App","getUserOnId","usersFromServer","find","useState","setTitle","userSelect","setUser","titleError","setTitleError","userSelectError","setUserSelectError","todoAndUser","todosFromServer","todo","setRenderTodos","action","method","placeholder","type","value","onChange","e","target","disabled","onClick","preventDefault","trim","newUser","length","state","examinationAddTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d6990a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { Todo } from '../Type/types';\n\ntype Props = {\n  renderTodo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ renderTodo }) => {\n  return (\n    <li style={{ listStyle: 'none' }}>\n      <h2 className=\"TodoInfo__title\">\n        {renderTodo.title}\n      </h2>\n\n      <a className=\"UserInfo\" href={`mailto:${renderTodo.user && renderTodo.user.email}`}>\n        {renderTodo.user && renderTodo.user.name}\n      </a>\n    </li>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Type/types';\n\ntype Props = {\n  renderTodos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ renderTodos }) => {\n  return (\n    <section className=\"TodoList\">\n      <ul>\n        {renderTodos.map(renderTodo => (\n          <article\n            data-id={renderTodo.id}\n            className={classNames(\n              'TodoInfo',\n              { 'TodoInfo--completed': renderTodo.completed },\n            )}\n            key={renderTodo.id}\n          >\n            <TodoInfo renderTodo={renderTodo} />\n          </article>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  function getUserOnId(id: number) {\n    return usersFromServer.find(user => user.id === id);\n  }\n\n  const [title, setTitle] = useState('');\n  const [userSelect, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userSelectError, setUserSelectError] = useState(false);\n\n  const todoAndUser = [...todosFromServer].map(todo => (\n    {\n      ...todo,\n      user: getUserOnId(todo.userId),\n    }\n  ));\n\n  const [renderTodos, setRenderTodos] = useState(todoAndUser);\n\n  const examinationAddTodos = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    // eslint-disable-next-line max-len, @typescript-eslint/no-unused-expressions\n    title.trim() === '' ? setTitleError(true) : setTitleError(false);\n    // eslint-disable-next-line max-len, @typescript-eslint/no-unused-expressions\n    userSelect === 0 ? setUserSelectError(true) : setUserSelectError(false);\n\n    if (title.trim() !== '' && userSelect !== 0) {\n      const newUser = {\n        id: renderTodos.length,\n        title,\n        completed: false,\n        userId: userSelect,\n        user: getUserOnId(userSelect),\n      };\n\n      setRenderTodos(state => [...state, newUser]);\n\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userSelect}\n              onChange={(e) => {\n                setUser(+e.target.value);\n                setUserSelectError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userSelectError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(e) => examinationAddTodos(e)}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList renderTodos={renderTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}